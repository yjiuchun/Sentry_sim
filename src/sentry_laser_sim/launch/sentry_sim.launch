<launch>
    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find sentry_laser_sim)/world/rmuc_23.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
s
    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- 加载机器人URDF/Xacro模型 -->
    <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find sentry_laser_sim)/xacro_new/sentry.xacro'" />

	<param name="robot_description" command="$(arg urdf_file)" />
	<param name="use_gui" value="$(arg gui)"/>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!--运行cloudpoint to cloudpoint2 节点-->
  <node name="cp2cp_2_node" pkg="sentry_laser_sim" type="cp2cp_2"/>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model sentry" />

  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="/joint_states" to="/sentry/joint_states" />
  </node> -->


  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find sentry_laser_sim)/config/new_sentry.yaml" command="load"/>
 
  <!-- load the controllers -->
   <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/sentry" args="joint_state_controller
            Yaw_controller"/>

            <!-- Heading_Left_Front_controller
	          Heading_Right_Front_controller
            Heading_Left_Back_controller
            Heading_Right_Back_controller
            Driving_Left_Front_controller
            Driving_Left_Back_controller
            Driving_Right_Front_controller
            Driving_Right_Back_controller -->

<!-- 加载控制节点 -->
  <node name="sentry_control" pkg="sentry_laser_sim" type="sentry_control" output="screen"/>

<!--发布静态坐标-->
  <!--node pkg="tf" type="static_transform_publisher" name="livox_tf_transform0" args="0 0 0.0 0 0 0 1 sentry::base_footprint odom 100" /-->
  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sentry_laser_sim)/rviz/test.rviz" required="true" /> -->

</launch>

